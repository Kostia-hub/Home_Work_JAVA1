import java.util.Arrays;

public class Main{
    static int [] ar2 = new int[8];
    static int [] ar3 = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
    static int [] ar1 = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
    static int [][] square = new int[10][10];
    
	public static void main(String[] args) {
		System.out.println("Задание 1 :" + Arrays.toString(zeroOne(ar1)));   //Задание 1
		System.out.println("Задание 2 :" + Arrays.toString(fillArray(ar2))); //Задание 2
		System.out.println("Задание 4, max:" + maxArray(ar3));     //Задание 4
		System.out.println("Задание 4, min:" + minArray(ar3));     //Задание 4
		diagonal(square);
		printSquare(square);

	//***************************************************************	
		int[] ourArray = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0}; // Задание 1 с помощью Arrays.parallelSetAll
        int[] newOurArray = Arrays.copyOf(ourArray, ourArray.length);

        Arrays.parallelSetAll(newOurArray, e ->
        {
            if (newOurArray[e] == 1)
                return newOurArray[e] = 0;
            else
                return newOurArray[e] = 1;
        }); 
        System.out.print("Задание 1 с помощью Arrays.parallelSetAll: ");

        Arrays.stream(newOurArray).forEach(e -> System.out.print(e + " "));
        System.out.println();
    //***************************************************************    
               // Задание 3 с помощью Arrays.parallelSetAll
        int [] arr_parallel1 = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        int[] arr_parallel2 = Arrays.copyOf(arr_parallel1, arr_parallel1.length);

        Arrays.parallelSetAll(arr_parallel2, e ->
        {
            if (arr_parallel2[e] < 6)
                return arr_parallel2[e] * 2;
            else
                return arr_parallel2[e];
        });
        System.out.print("Задание 3 с помощью Arrays.parallelSetAll: ");

        Arrays.stream(arr_parallel2).forEach(e -> System.out.print(e + " "));
        
	}
//*************   задание 1  **************************	
    public static int[] zeroOne(int[] res) { 
         //arr[i] = (arr[i] == 1) ? 0 : 1; - решение задания 1 через тернарный оператор.
         //arr[i] = 1 - arr[i]; - решение через 1 строку;
        for(int i = 0; i < res.length; i++){ 

            if(ar1[i] == 1){
                res[i] = 0;
            }else{
                res[i] = 1;
            }
        }return res;
   }
//*************   задание 2  ****************************

    public static int[] fillArray(int[] res){ 
        res = new int[ar2.length];
        int x =1;
        for(int i = 0; i < res.length; i++){
            res[i] = x;
            x += 3;
        }return res;
    }
//*************   задание 4  ****************************

	public static int maxArray(int[] res){  //Задание 4 max
        int x;
        Arrays.sort(res);       //это плохой способ, тк заменятеся сам массив
        x = res[res.length - 1];//если нам в метод пришел массив для поиска в нем, 
        return x;               //мы должны в нем искать, а не менять при этом массив
	  }
	  
	 public static int minArray(int[] res){  //Задание 4 min
        int min = res[0];
        for (int i = 1; i < res.length; i++) {
            if (res[i] < min) {
                min = res[i];
            }
	    }return min;
     }
//**************** Задание 2 ******************************

    private static void arithmetic(int[] arr){
        for (int i = 0; i < arr.length; i++){
         //i = 0 1 2 3 4 5 6 7
         //*3= 0 3 6 9 12 15 18 21
         //+1= 1 4 7 10 13 16 19 22
        arr[i] = i * 3 + 1;
        }
    }


//************** Задание 5 *********************************
//Создать квадратный целочисленный массив (количество строк и столбцов одинаковое),
//заполнить его диагональные элементы единицами, используя цикл(ы);

private static void printSquare(int[][] arr) {  // это мы создали квадратный массив из 0 и вывели его  на экран
    for (int i = 0; i < arr.length; i++) {
        for (int j = 0; j < arr[i].length; j++) {
            System.out.print(arr[i][j] + " ");
        }
        System.out.println();
    }
}

private static void diagonal(int[][] arr) { // этот метод заполняет единицами по диагонали массива
    for (int i = 0; i < arr.length; i++) {
        arr[i][i] = 1;//заполняем единицами диагональ лево-право
        arr[i][arr.length - i -1] = 1;//заполняем единацами диагональ право-лево
    }
}

}