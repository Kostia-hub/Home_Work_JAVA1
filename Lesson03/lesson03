import java.util.Scanner;
import java.util.Random;

public class Main {

    private static final char DOT_HUMAN = 'X';
    private static final char DOT_AI = 'O';
    private static final char DOT_EMPTY = '.';
    private static final Scanner SCANNER = new Scanner(System.in);
    private static final Random RANDOM = new Random();
    private static int fieldSizeX;
    private static int fieldSizeY;
    private static char[][] field;
    private static int winLine = 3; //если поле 5X5; winLine = 3 || 4 || 5

    private static void initField() {
        fieldSizeX = 3;
        fieldSizeY = 3;
        field = new char [fieldSizeY][fieldSizeX];
        for (int i = 0; i < fieldSizeY; i++) {
            for (int j = 0; j < fieldSizeX; j++) {
                field[i][j] = DOT_EMPTY;
            }
        }
    }

    private static void printField() {
        for (int i = 0; i < fieldSizeY; i++) {
            System.out.print("|");
            for (int j = 0; j < fieldSizeX; j++) {
                System.out.print(field[i][j] + "|");
            }
            System.out.println();
        }
    }

    private static void humanTurn() {
        int x;
        int y;
        do {
            System.out.print("Enter coordinates (x y) 1 to " + fieldSizeX + ">>");
            x = SCANNER.nextInt() - 1;
            y = SCANNER.nextInt() - 1;
        } while (!isCellValid(x, y) || !isCellEmpty(x, y));
        field[y][x] = DOT_HUMAN;
    }

    private static boolean isCellValid(int x, int y) {
        return x >= 0 && x < fieldSizeX && y >= 0 && y < fieldSizeY;
    }

    private static boolean isCellEmpty(int x, int y) {
        return field[y][x] == DOT_EMPTY;
    }

    private static void aiTurn() {
        int x;
        int y;
        do {
            x = RANDOM.nextInt(fieldSizeX);
            y = RANDOM.nextInt(fieldSizeY);
        } while (!isCellEmpty(x, y));
        field[y][x] = DOT_AI;
    }

    private static boolean isDraw() {
        for (int y = 0; y < fieldSizeY; y++) {
            for (int x = 0; x < fieldSizeX; x++) {
                if (field[y][x] == DOT_EMPTY)
                    return false;
            }
        }
        return true;
    }

    private static boolean checkWin(char c) {
        int count = 0;

        for (int y = 0; y < fieldSizeY; y++) {     // Проверяем Win по горизонтали
            for (int x = 0; x < fieldSizeX; x++) {
                if (field[y][x] == c){
                    count++;
                    if (count == winLine) return true;
                }else{
                    count = 0;
                }
            }
        }

        for (int x = 0; x < fieldSizeY; x++) {    // Проверяем Win по вертикали
            for (int y = 0; y < fieldSizeX; y++) {
                if (field[y][x] == c){
                    count++;
                    if (count == winLine) return true;
                }else{
                    count = 0;
                }
            }
        }

        for (int i = 0; i < field.length; i++) {        //Проверяем Win по диагонали
            if (field[i][i] == c){
                count++;
                if (count == winLine) return true;
            }else {count = 0;
            }
        }

        for (int i = 0; i < field.length; i++) {       //Проверяем Win по диагонали
            if(field[i][field.length - i -1] == c){
                count++;
                if (count == winLine) return true;
            }else{count = 0;
            }
        }
        if(fieldSizeX == 5 && winLine != 5){  //Проверяем доп. диагонали в поле 5на5
        
            for (int i = 0; i < field.length - 1; i++) {// проверка диагональки лево-право выше основной
                if (field[i][i+1] == c){
                    count++;
                    if (count == winLine) return true;
                }else {count = 0;
                }
            }

            for (int i = 0; i < field.length - 1; i++) {// проверка диагональки лево-право ниже основной
                if (field[i+1][i] == c){
                    count++;
                    if (count == winLine) return true;
                }else {count = 0;
                }
            }
            
            for (int i = 0; i < field.length-1; i++) {//проверка диагональки право-лево ниже основной
            if(field[i+1][field.length - i - 1] == c){
                count++;
                if (count == winLine) return true;
            }else{count = 0;
            }
        }
        
             for (int i = 0; i < field.length-1; i++) {//проверка диагональки право-лево выше основной
            if(field[i][field.length - i -2] == c){
                count++;
                if (count == winLine) return true;
            }else{count = 0;
            }
        }
        }
        return false;
    }

    public static void main(String[] args) {
        initField();
        printField();
        while (true) {
            humanTurn();
            printField();
            if (checkWin(DOT_HUMAN)) {
                System.out.print("Human win!");
                break;
            }
            if (isDraw()) {
                System.out.print("Draw!");
                break;
            }
            aiTurn();
            printField();
            if (checkWin(DOT_AI)) {
                System.out.print("Computer win!");
                break;
            }
            if (isDraw()) {
                System.out.print("Draw!");
                break;
            }
        }
    }
}
